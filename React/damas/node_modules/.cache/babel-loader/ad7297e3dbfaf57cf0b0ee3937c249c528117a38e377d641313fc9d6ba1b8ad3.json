{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan Diego\\\\OneDrive\\\\Escritorio\\\\Documentos\\\\JavaScript\\\\React\\\\damas\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Botonera(props) {\n  let aux = [];\n  for (let i = 0; i < props.tablero.length; i++) {\n    let arr = [];\n    for (let j = 0; j < props.tablero[i].length; j++) {\n      if (props.tablero[i][j] == \"verde\") {\n        arr.push( /*#__PURE__*/_jsxDEV(Button, {\n          className: \"relleno\",\n          color: \"success\",\n          onClick: () => props.mover(i, j)\n        }, i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 18\n        }, this));\n      } else if (props.tablero[i][j] == \"azul\") {\n        arr.push( /*#__PURE__*/_jsxDEV(Button, {\n          className: \"relleno\",\n          color: \"primary\",\n          onClick: () => props.mover(i, j)\n        }, i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 18\n        }, this));\n      } else {\n        arr.push( /*#__PURE__*/_jsxDEV(Button, {\n          className: \"relleno\",\n          color: \"outline\",\n          onClick: () => props.mover(i, j)\n        }, i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this));\n      }\n    }\n    aux.push(arr);\n    aux.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this));\n  }\n  return aux;\n}\n_c = Botonera;\nclass App extends Component {\n  constructor(props) {\n    //DAMAS. EXAMEN REACTJS.\n\n    super(props);\n    this.cambiar = (idestino, jdestino) => {\n      // si no se ha seleccionado ficha y el jugador actual es el 1 y hemos clickado sobre una ficha del jugador 1 (azul)\n      if (!this.state.fichaSelccionada && this.state.jugadorActual === 1 && this.state.matriz[idestino][jdestino] === \"azul\") {\n        console.log(\"Hola 1\");\n        // setear los estados de texto, para saber que ficha se ha selccionado y dar paso a mover la ficha poniendo la ficha seleccionada a true\n        this.setState({\n          texto: \"selecciona destino, ficha seleccionada \" + idestino + \",\" + jdestino,\n          fichaSelccionada: true,\n          coordenadasFichaSeleccionada: [idestino, jdestino]\n        });\n\n        // si no se ha seleccionado ficha y el jugador actual es el 2 y hemos clickado sobre una ficha del jugador 2 (verde)\n      }\n      if (!this.state.fichaSelccionada && this.state.jugadorActual === 2 && this.state.matriz[idestino][jdestino] === \"verde\") {\n        console.log(\"Hola 2\");\n        // setear los estados de texto, para saber que ficha se ha selccionado y dar paso a mover la ficha poniendo la ficha seleccionada a true\n        this.setState({\n          texto: \"selecciona destino, ficha seleccionada \" + idestino + \",\" + jdestino,\n          fichaSelccionada: true,\n          coordenadasFichaSeleccionada: [idestino, jdestino]\n        });\n\n        // si la ficha ha sido seleccionada y el jugador actual es el 1 , solo mover hacia arriba\n      }\n      if (this.state.fichaSelccionada && this.state.jugadorActual === 1 && idestino === this.state.coordenadasFichaSeleccionada[0] - 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] + 1 || idestino === this.state.coordenadasFichaSeleccionada[0] - 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] - 1 && this.state.matriz[idestino][jdestino] !== \"azul\") {\n        console.log(\"Hola 3\");\n        // mover la ficha origen a la coordenada que viene por parametro (destino)\n        let copiaEstado = this.state.matriz.slice();\n        copiaEstado[idestino][jdestino] = \"azul\";\n        copiaEstado[this.state.coordenadasFichaSeleccionada[0]][this.state.coordenadasFichaSeleccionada[1]] = 0;\n        this.setState({\n          matriz: copiaEstado,\n          jugadorActual: 2,\n          texto: \"mueve una ficha\",\n          fichaSelccionada: false\n        });\n\n        // si la ficha ha salido seleccionada y el jugador actual es el 2, solo mover hacia abajo\n      }\n      if (this.state.fichaSelccionada && this.state.jugadorActual === 2 && idestino === this.state.coordenadasFichaSeleccionada[0] + 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] + 1 || idestino === this.state.coordenadasFichaSeleccionada[0] + 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] - 1 && this.state.matriz[idestino][jdestino] !== \"verde\") {\n        console.log(\"Hola 4\");\n        // mover la ficha origen a la coordenada que viene por parametro (destino)\n        let copiaEstado = this.state.matriz.slice();\n        copiaEstado[idestino][jdestino] = \"verde\";\n        copiaEstado[this.state.coordenadasFichaSeleccionada[0]][this.state.coordenadasFichaSeleccionada[1]] = 0;\n        this.setState({\n          matriz: copiaEstado,\n          jugadorActual: 1,\n          texto: \"mueve una ficha\",\n          fichaSelccionada: false\n        });\n      }\n    };\n    this.state = {\n      matriz: Array(8).fill(0),\n      jugadorActual: 1,\n      texto: \"mueve una ficha\",\n      fichaSelccionada: false,\n      coordenadasFichaSeleccionada: []\n    };\n  }\n  componentWillMount() {\n    let aux = [];\n    for (let i = 0; i < this.state.matriz.length; i++) {\n      let arr = [];\n      for (let j = 0; j < this.state.matriz.length; j++) {\n        if (i < 3 || i > 4) {\n          if ((i == 0 || i % 2 == 0) && j % 2 != 0 || i % 2 != 0 && (j == 0 || j % 2 == 0)) {\n            if (i < 3) {\n              arr.push(\"verde\");\n            } else if (i > 4) {\n              arr.push(\"azul\");\n            }\n          } else {\n            arr.push(0);\n          }\n        } else {\n          arr.push(0);\n        }\n      }\n      aux.push(arr);\n    }\n    this.setState({\n      matriz: aux\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Jugador \" + this.state.jugadorActual, \": \", this.state.texto]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Botonera, {\n        tablero: this.state.matriz,\n        mover: this.cambiar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Botonera\");","map":{"version":3,"names":["React","Component","Button","jsxDEV","_jsxDEV","Botonera","props","aux","i","tablero","length","arr","j","push","className","color","onClick","mover","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","constructor","cambiar","idestino","jdestino","state","fichaSelccionada","jugadorActual","matriz","console","log","setState","texto","coordenadasFichaSeleccionada","copiaEstado","slice","Array","fill","componentWillMount","render","children","$RefreshReg$"],"sources":["C:/Users/Juan Diego/OneDrive/Escritorio/Documentos/JavaScript/React/damas/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\nfunction Botonera(props) {\r\n\r\n\r\n\r\n  let aux = [];\r\n  for (let i = 0; i < props.tablero.length; i++) {\r\n    let arr = [];\r\n    for (let j = 0; j < props.tablero[i].length; j++) {\r\n      if (props.tablero[i][j] == \"verde\") {\r\n        arr.push(<Button key={i + \"\" + j} className=\"relleno\" color='success' onClick={() => props.mover(i,j)}></Button>);\r\n      } else if (props.tablero[i][j] == \"azul\") {\r\n        arr.push(<Button key={i + \"\" + j} className=\"relleno\" color='primary' onClick={() => props.mover(i,j)}></Button>);\r\n      } else {\r\n        arr.push(<Button key={i + \"\" + j} className=\"relleno\" color=\"outline\" onClick={() => props.mover(i,j)}></Button>);\r\n      }\r\n\r\n    }\r\n    aux.push(arr);\r\n    aux.push(<br></br>);\r\n  }\r\n\r\n  return aux;\r\n\r\n}\r\nclass App extends Component {\r\n  constructor(props) {\r\n\r\n    //DAMAS. EXAMEN REACTJS.\r\n\r\n    super(props);\r\n    this.state = {\r\n      matriz: Array(8).fill(0),\r\n      jugadorActual: 1,\r\n      texto: \"mueve una ficha\",\r\n      fichaSelccionada: false,\r\n      coordenadasFichaSeleccionada: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    let aux = [];\r\n    for (let i = 0; i < this.state.matriz.length; i++) {\r\n      let arr = [];\r\n      for (let j = 0; j < this.state.matriz.length; j++) {\r\n\r\n        if (i < 3 || i > 4) {\r\n          if (((i == 0 || (i % 2 == 0)) && j % 2 != 0) || ((i % 2 != 0) && ((j == 0 || j % 2 == 0)))) {\r\n            if (i < 3) {\r\n              arr.push(\"verde\");\r\n            } else if (i > 4) {\r\n              arr.push(\"azul\");\r\n            }\r\n          } else {\r\n            arr.push(0);\r\n          }\r\n        } else {\r\n          arr.push(0);\r\n        }\r\n      }\r\n      aux.push(arr);\r\n    }\r\n    this.setState({ matriz: aux });\r\n  }\r\n  cambiar = (idestino, jdestino) => {\r\n\r\n    // si no se ha seleccionado ficha y el jugador actual es el 1 y hemos clickado sobre una ficha del jugador 1 (azul)\r\n    if (!this.state.fichaSelccionada && this.state.jugadorActual === 1 && this.state.matriz[idestino][jdestino] === \"azul\") {\r\n      console.log(\"Hola 1\")\r\n      // setear los estados de texto, para saber que ficha se ha selccionado y dar paso a mover la ficha poniendo la ficha seleccionada a true\r\n      this.setState({ texto: \"selecciona destino, ficha seleccionada \" + idestino + \",\" + jdestino, fichaSelccionada: true, coordenadasFichaSeleccionada: [idestino, jdestino] })\r\n\r\n      // si no se ha seleccionado ficha y el jugador actual es el 2 y hemos clickado sobre una ficha del jugador 2 (verde)\r\n    }\r\n\r\n    if (!this.state.fichaSelccionada && this.state.jugadorActual === 2 && this.state.matriz[idestino][jdestino] === \"verde\") {\r\n      console.log(\"Hola 2\")\r\n      // setear los estados de texto, para saber que ficha se ha selccionado y dar paso a mover la ficha poniendo la ficha seleccionada a true\r\n      this.setState({ texto: \"selecciona destino, ficha seleccionada \" + idestino + \",\" + jdestino, fichaSelccionada: true, coordenadasFichaSeleccionada: [idestino, jdestino] })\r\n\r\n      // si la ficha ha sido seleccionada y el jugador actual es el 1 , solo mover hacia arriba\r\n    }\r\n    if (this.state.fichaSelccionada && this.state.jugadorActual === 1 && idestino === this.state.coordenadasFichaSeleccionada[0] - 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] + 1 || idestino === this.state.coordenadasFichaSeleccionada[0] - 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] - 1 && this.state.matriz[idestino][jdestino] !== \"azul\") {\r\n      console.log(\"Hola 3\")\r\n      // mover la ficha origen a la coordenada que viene por parametro (destino)\r\n      let copiaEstado = this.state.matriz.slice()\r\n      copiaEstado[idestino][jdestino] = \"azul\"\r\n      copiaEstado[this.state.coordenadasFichaSeleccionada[0]][this.state.coordenadasFichaSeleccionada[1]] = 0\r\n      this.setState({ matriz: copiaEstado, jugadorActual: 2, texto: \"mueve una ficha\", fichaSelccionada: false })\r\n\r\n      // si la ficha ha salido seleccionada y el jugador actual es el 2, solo mover hacia abajo\r\n    }\r\n    if (this.state.fichaSelccionada && this.state.jugadorActual === 2 && idestino === this.state.coordenadasFichaSeleccionada[0] + 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] + 1 || idestino === this.state.coordenadasFichaSeleccionada[0] + 1 && jdestino === this.state.coordenadasFichaSeleccionada[1] - 1 && this.state.matriz[idestino][jdestino] !== \"verde\") {\r\n      console.log(\"Hola 4\")\r\n      // mover la ficha origen a la coordenada que viene por parametro (destino)\r\n      let copiaEstado = this.state.matriz.slice()\r\n      copiaEstado[idestino][jdestino] = \"verde\"\r\n      copiaEstado[this.state.coordenadasFichaSeleccionada[0]][this.state.coordenadasFichaSeleccionada[1]] = 0\r\n      this.setState({ matriz: copiaEstado, jugadorActual: 1, texto: \"mueve una ficha\", fichaSelccionada: false })\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p>{\"Jugador \" + this.state.jugadorActual}: {this.state.texto}</p>\r\n        <Botonera tablero={this.state.matriz} mover={this.cambiar} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}